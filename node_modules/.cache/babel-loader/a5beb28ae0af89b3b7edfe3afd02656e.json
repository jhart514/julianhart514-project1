{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\hartj\\\\hackernews\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\hartj\\\\hackernews\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\hartj\\\\hackernews\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\hartj\\\\hackernews\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\hartj\\\\hackernews\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\hartj\\\\hackernews\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\hartj\\\\hackernews\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\hartj\\\\hackernews\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.onSearchSubmit = function (h) {\n      h.preventDefault();\n      document.getElementById(\"see-all\");\n      document.getElementById(\"searching\");\n\n      var newRecord = _this.state.allMembers.filter(function (users) {\n        return users.name.toLowerCase().includes(_this.state.searchReference);\n      });\n\n      _this.setState({\n        records: newRecord\n      });\n\n      if (newRecord.length <= 0) _this.setState({\n        error: 'The record was not found in the database.'\n      });else _this.setState({\n        error: ''\n      });\n    };\n\n    _this.onSearchChange = function (h) {\n      return _this.setState({\n        searchReference: h.target.value\n      });\n    };\n\n    _this.onViewAllClick = function () {\n      document.getElementById(\"see-all\");\n      document.getElementById(\"searching\");\n\n      _this.setState({\n        records: _this.state.allMembers\n      });\n\n      document.getElementById('digging').reset();\n\n      _this.setState({\n        searchReference: ''\n      });\n\n      _this.setState({\n        error: ''\n      });\n    };\n\n    _this.onDismiss = function (h, username) {\n      _this.setState({\n        records: _this.state.records.filter(function (users) {\n          return users.username !== username;\n        })\n      });\n\n      _this.setState({\n        allMembers: _this.state.allMembers.filter(function (users) {\n          return users.username !== username;\n        })\n      });\n    };\n\n    _this.onAddSubmit = function (h) {\n      h.preventDefault();\n      var empty = false;\n      var unique = true;\n      var _this$state = _this.state,\n          allMembers = _this$state.allMembers,\n          newMembers = _this$state.newMembers;\n\n      for (var key in newMembers) {\n        if (newMembers[key].length <= 0) {\n          empty = true;\n          break;\n        }\n      }\n\n      allMembers.some(function (user) {\n        if (user.username === newMembers.username) {\n          unique = false;\n\n          _this.setState({\n            error: ' Apologies the username you gave already exist in the database.'\n          });\n\n          return true;\n        } else {\n          _this.setState({\n            error: ''\n          });\n\n          return false;\n        }\n      }); //This governs the reset once the user submit new information into the database\n\n      if (!empty && unique) {\n        allMembers.push(_this.state.newMembers);\n\n        _this.setState({\n          newMembers: newMembers\n        });\n\n        _this.setState({\n          newMembers: {\n            name: '',\n            username: '',\n            email: ''\n          }\n        });\n\n        document.getElementById('Adding').reset();\n\n        _this.onViewAllClick();\n      }\n    };\n\n    _this.onAddChange = function (h) {\n      var newMembers = _this.state.newMembers;\n      newMembers[h.target.name] = h.target.value;\n\n      _this.setState(_objectSpread({}, _this.state, {\n        newMembers: newMembers\n      }));\n    };\n\n    _this.state = {\n      searchReference: '',\n      allMembers: [],\n      newMembers: {\n        name: '',\n        username: '',\n        email: ''\n      },\n      records: [],\n      error: ''\n    };\n    _this.onAddSubmit = _this.onAddSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSearchSubmit = _this.onSearchSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSearchChange = _this.onSearchChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onDismiss = _this.onDismiss.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //This will get the data from the website and store it\n\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var url = 'https://jsonplaceholder.typicode.com/users/';\n      fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this2.setState({\n          allMembers: data,\n          records: data\n        });\n      }).catch(function (h) {\n        return console.log('error', h);\n      });\n    } // This will look for a name in the database and return it if exists\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \" Project 1 React\", React.createElement(\"button\", {\n        id: \"see-all\",\n        style: {\n          marginLeft: \"50px\"\n        },\n        onClick: this.onViewAllClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"See all Current Members\")), React.createElement(Search, {\n        onSubmit: this.onSearchSubmit,\n        onChange: this.onSearchChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(Table, {\n        users: this.state.records,\n        onDismiss: this.onDismiss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(Add, {\n        onSubmit: this.onAddSubmit,\n        onChange: this.onAddChange,\n        newMembers: this.state.newMembers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(Error, {\n        error: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component); //This function handles searching through the database when the user submits a name to search\n\n\nexport { App as default };\n\nvar Search = function Search(_ref) {\n  var onSubmit = _ref.onSubmit,\n      onChange = _ref.onChange;\n  return React.createElement(\"form\", {\n    id: \"digging\",\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: onChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    id: \"dig\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Find name\"));\n}; //This handles the table of elements \n\n\nvar Table = function Table(_ref2) {\n  var users = _ref2.users,\n      onDismiss = _ref2.onDismiss;\n  return React.createElement(\"div\", {\n    className: \"hold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"height\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"length\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"span\", {\n    className: \"length\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"span\", {\n    className: \"length\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"email\")), users.map(function (item) {\n    return React.createElement(\"div\", {\n      className: \"column\",\n      key: item.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"length\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, item.name), React.createElement(\"span\", {\n      className: \"length\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, item.username), React.createElement(\"span\", {\n      className: \"length\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, item.email), React.createElement(\"span\", {\n      className: \"object\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: function onClick(h) {\n        return onDismiss(h, item.username);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Remove\")));\n  }));\n}; //This governs the three input areas for entering a new account\n\n\nvar Add = function Add(_ref3) {\n  var onSubmit = _ref3.onSubmit,\n      onChange = _ref3.onChange,\n      newMembers = _ref3.newMembers;\n  return React.createElement(\"form\", {\n    id: \"Adding\",\n    className: \"row-add\",\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"name\",\n    className: \"userInput\",\n    placeholder: \"Enter Name\",\n    value: newMembers.name,\n    onChange: onChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    name: \"username\",\n    className: \"userInput\",\n    placeholder: \"Enter unique Username\",\n    value: newMembers.username,\n    onChange: onChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    className: \"userInput\",\n    placeholder: \"Enter Email Address\",\n    value: newMembers.email,\n    onChange: onChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"createUser\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, \"Create\"));\n}; //This handles errors \n\n\nvar Error = function Error(_ref4) {\n  var error = _ref4.error;\n  return error === '' ? '' : React.createElement(\"span\", {\n    classname: \"whoops\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, error);\n};","map":{"version":3,"sources":["C:\\Users\\hartj\\hackernews\\src\\App.js"],"names":["React","Component","App","props","onSearchSubmit","h","preventDefault","document","getElementById","newRecord","state","allMembers","filter","users","name","toLowerCase","includes","searchReference","setState","records","length","error","onSearchChange","target","value","onViewAllClick","reset","onDismiss","username","onAddSubmit","empty","unique","newMembers","key","some","user","push","email","onAddChange","bind","url","fetch","then","response","json","data","catch","console","log","marginLeft","Search","onSubmit","onChange","Table","map","item","Add","Error"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport'./App.css'\n\nexport default class App extends Component{\n    constructor(props) {\n        super(props);\n        this.state ={\n            searchReference: '',\n            allMembers: [],\n            newMembers: {name: '', username: '', email: ''},\n            records:[],\n            error:''\n        }\n    this.onAddSubmit = this.onAddSubmit.bind(this);\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n        \n    }\n\n\n//This will get the data from the website and store it\ncomponentDidMount(){\n    const url = 'https://jsonplaceholder.typicode.com/users/'\n    fetch(url)\n    .then(response => response.json())\n    .then(data => this.setState({allMembers:data, records: data}))\n    .catch(h =>console.log('error', h))\n}\n\n\n// This will look for a name in the database and return it if exists\nonSearchSubmit = (h) => {\n  h.preventDefault()\n  document.getElementById(\"see-all\")\n  document.getElementById(\"searching\")\n\n  let newRecord = this.state.allMembers.filter(users => users.name.toLowerCase().includes(this.state.searchReference))\n  this.setState({records: newRecord})\n\nif(newRecord.length <= 0)\nthis.setState({error: 'The record was not found in the database.'})\nelse\nthis.setState({error: ''})\n}\n\nonSearchChange = (h) => this.setState({searchReference: h.target.value})\n\n//This is will show all of the current members\nonViewAllClick = () => {\ndocument.getElementById(\"see-all\")\ndocument.getElementById(\"searching\")\nthis.setState({records: this.state.allMembers})\ndocument.getElementById('digging').reset()\nthis.setState({searchReference: ''})\nthis.setState({error:''})\n}\n\n//This will govern that the usernames do not match\nonDismiss = (h, username) => {\nthis.setState({\nrecords: this.state.records.filter(users => users.username !== username)\n})\n\nthis.setState({\n    allMembers: this.state.allMembers.filter(users => users.username !== username)\n})\n\n}\n//This will help add a record if the fields are unique\nonAddSubmit = (h) => {\n    h.preventDefault()\n    let empty = false\n    let unique = true\n    const{allMembers, newMembers} = this.state\n\nfor (const key in newMembers){\n    if(newMembers[key].length <= 0){\n    empty = true\n    break\n    }\n}\n\nallMembers.some(user => {\nif(user.username === newMembers.username){\n    unique = false\n    this.setState({error: ' Apologies the username you gave already exist in the database.'})\n    return true \n}\n\nelse{\n    this.setState({error: ''})\n    return false\n}\n\n})\n\n\n//This governs the reset once the user submit new information into the database\nif(!empty && unique){\n    allMembers.push(this.state.newMembers)\n    this.setState({newMembers: newMembers})\n    this.setState({newMembers: {name: '', username: '', email: ''}})\n    document.getElementById('Adding').reset()\n    this.onViewAllClick()\n}\n\n}\n\n//This will handle the setting the state for new members\nonAddChange = (h) => {\nlet newMembers = this.state.newMembers\nnewMembers[h.target.name] = h.target.value\nthis.setState({...this.state, newMembers: newMembers})\n}\n\nrender(){\n    return(\n        <div className=\"App\">\n        <h2> Project 1 React\n        <button\n        id =\"see-all\"\n        style = {{marginLeft: \"50px\"}}\n        onClick={this.onViewAllClick}>\n        See all Current Members\n        </button>\n        </h2>\n        \n        <Search\n        onSubmit = {this.onSearchSubmit}\n        onChange = {this.onSearchChange}\n        />\n\n        <Table\n        users={this.state.records}\n        onDismiss={this.onDismiss}\n        />\n\n        <Add \n        onSubmit = {this.onAddSubmit}\n        onChange = {this.onAddChange}\n        newMembers = {this.state.newMembers}\n        />\n\n<Error error ={this.state.error}/> \n        </div>\n\n    )\n   }\n}\n\n//This function handles searching through the database when the user submits a name to search\nconst Search = ({onSubmit, onChange}) => (\n<form id = 'digging' onSubmit={onSubmit}>\n<input \nonChange ={onChange} required/>\n<button id = 'dig'>\nFind name\n</button>\n</form>\n)\n\n//This handles the table of elements \nconst Table = ({users, onDismiss}) => (\n    <div className =\"hold\">\n    <div className=\"height\">\n    <span className =\"length\">\n    Name\n    </span>\n    <span className = \"length\">\n    Username\n    </span>\n    <span className =\"length\">\n     email\n     </span>\n     </div>\n\n     {users.map((item) => \n( \n<div className = \"column\" key={item.username}>\n<span className= \"length\">\n{item.name}\n</span>\n<span className = \"length\">\n{item.username}\n</span>\n<span className=\"length\">\n{item.email}\n</span>\n<span className =\"object\">\n<button\nonClick ={(h) => onDismiss(h, item.username)}>\nRemove\n</button>\n</span>\n\n</div>\n)\n     )}\n     </div>\n)\n\n\n//This governs the three input areas for entering a new account\nconst Add  = ({onSubmit, onChange, newMembers}) =>\n<form id = \"Adding\" \nclassName = \"row-add\"\nonSubmit={onSubmit}>\n\n <input name=\"name\" \n className=\"userInput\" \n placeholder=\"Enter Name\" \n value={newMembers.name} \n onChange={onChange} required />\n\n        <input name=\"username\"\n        className=\"userInput\" \n        placeholder=\"Enter unique Username\" \n        value={newMembers.username} \n        onChange={onChange} required />\n\n        <input type=\"email\" \n         name=\"email\" \n         className=\"userInput\" \n         placeholder=\"Enter Email Address\"\n         value={newMembers.email} \n         onChange={onChange} required />\n        <button className=\"createUser\">\n        Create\n        </button>\n    </form>\n\n\n//This handles errors \nconst Error = ({error}) =>((error === '') ? '':\n<span classname =\"whoops\">\n{error}\n</span>\n)\n\n\n"]},"metadata":{},"sourceType":"module"}